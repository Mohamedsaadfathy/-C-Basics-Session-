
1- Write a program that allows the user to insert an integer then print all numbers between 1 to that number.
    Example 
    Input: 5
    Output: 1, 2, 3, 4, 5

using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter an integer: ");
        int number;
        
        while (!int.TryParse(Console.ReadLine(), out number) || number < 1)
        {
            Console.Write("Please enter a valid positive integer: ");
        }

        Console.WriteLine("Output:");
        for (int i = 1; i <= number; i++)
        {
            Console.Write(i);
            if (i < number) 
            {
                Console.Write(", ");
            }
        }
        Console.WriteLine();
    }
}
















2- Write a program that allows the user to insert an integer then 
print a multiplication table up to 12.
    Example
    Input: 5
    Outputs: 5 10 15 20 25 30 35 40 45 50 55 60


using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter an integer: ");
        int number;

        while (!int.TryParse(Console.ReadLine(), out number))
        {
            Console.Write("Please enter a valid integer: ");
        }

        Console.WriteLine("Multiplication Table:");
        for (int i = 1; i <= 12; i++)
        {
            Console.Write(number * i);
            if (i < 12)
            {
                Console.Write(" ");
            }
        }
        Console.WriteLine();
    }
}















3- Write a program that allows to user to insert number then print all even numbers between 1 to this number
    Example:
    Input: 15
 Output: 2 4 6 8 10 12 14



using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter an integer: ");
        int number;

        while (!int.TryParse(Console.ReadLine(), out number) || number < 1)
        {
            Console.Write("Please enter a valid positive integer: ");
        }

        Console.WriteLine("Even numbers:");
        for (int i = 2; i <= number; i += 2) 
        {
            Console.Write(i);
            if (i + 2 <= number) 
            {
                Console.Write(" ");
            }
        }
        Console.WriteLine();
    }
}
















4- Write a program that takes two integers then prints the power.
    Example:
    Input: 4 3
    Output: 64
    Hint: how to calculate 4^3 = 4 * 4 * 4 =64



using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter the base number: ");
        int baseNumber;
        while (!int.TryParse(Console.ReadLine(), out baseNumber))
        {
            Console.Write("Please enter a valid integer for the base number: ");
        }

        Console.Write("Enter the exponent: ");
        int exponent;
        while (!int.TryParse(Console.ReadLine(), out exponent))
        {
            Console.Write("Please enter a valid integer for the exponent: ");
        }

        // Calculate power
        int result = 1;
        for (int i = 0; i < exponent; i++)
        {
            result *= baseNumber;
        }

        Console.WriteLine($"Output: {result}");
    }
}

















5- Write a program to enter marks of five subjects and calculate total, average and percentage.
    Example
    Input: - Enter Marks of five subjects: 95 76 58 90 89
    Output: Total marks = 408
            Average Marks = 81
            Percentage = 81


            using System;

class Program
{
    static void Main()
    {
        int[] marks = new int[5];
        int total = 0;

        Console.WriteLine("Enter marks of five subjects:");

        for (int i = 0; i < 5; i++)
        {
            Console.Write($"Subject {i + 1}: ");
            while (!int.TryParse(Console.ReadLine(), out marks[i]) || marks[i] < 0 || marks[i] > 100)
            {
                Console.Write("Please enter valid marks between 0 and 100: ");
            }
            total += marks[i];
        }

        double average = total / 5.0;
        double percentage = (total / 500.0) * 100;

        Console.WriteLine($"Total Marks = {total}");
        Console.WriteLine($"Average Marks = {average:F2}");
        Console.WriteLine($"Percentage = {percentage:F2}");
    }
}













6- Write a program to input the month number and print the number of days in that month.
    Example
    Input: Month Number: 1
    Output: Days in Month: 31

    using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter the month number (1-12): ");
        int month;

        while (!int.TryParse(Console.ReadLine(), out month) || month < 1 || month > 12)
        {
            Console.Write("Please enter a valid month number between 1 and 12: ");
        }

        int days;

        switch (month)
        {
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                days = 31;
                break;
            case 4: case 6: case 9: case 11:
                days = 30;
                break;
            case 2:
                Console.Write("Is it a leap year? (yes/no): ");
                string leapYearInput = Console.ReadLine().Trim().ToLower();
                days = (leapYearInput == "yes") ? 29 : 28;
                break;
            default:
                days = 0; 
                break;
        }

        Console.WriteLine($"Days in Month: {days}");
    }
}


















7- Write a program to create a Simple Calculator.




using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Simple Calculator");

        Console.Write("Enter the first number: ");
        double num1;
        while (!double.TryParse(Console.ReadLine(), out num1))
        {
            Console.Write("Please enter a valid number: ");
        }

        Console.Write("Enter an operator (+, -, *, /): ");
        char operation;
        while (!char.TryParse(Console.ReadLine(), out operation) || "+-*/".IndexOf(operation) == -1)
        {
            Console.Write("Please enter a valid operator (+, -, *, /): ");
        }

        Console.Write("Enter the second number: ");
        double num2;
        while (!double.TryParse(Console.ReadLine(), out num2) || (operation == '/' && num2 == 0))
        {
            if (operation == '/' && num2 == 0)
            {
                Console.Write("Division by zero is not allowed. Please enter a non-zero number: ");
            }
            else
            {
                Console.Write("Please enter a valid number: ");
            }
        }

        double result;
        switch (operation)
        {
            case '+':
                result = num1 + num2;
                break;
            case '-':
                result = num1 - num2;
                break;
            case '*':
                result = num1 * num2;
                break;
            case '/':
                result = num1 / num2;
                break;
            default:
                result = 0; // This case will never occur because of input validation
                break;
        }

        Console.WriteLine($"Result: {num1} {operation} {num2} = {result}");
    }
}













8- Write a program to allow the user to enter int and print the REVERSED of it.




using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter an integer: ");
        int number;

        while (!int.TryParse(Console.ReadLine(), out number))
        {
            Console.Write("Please enter a valid integer: ");
        }

        int reversed = 0;
        int originalNumber = number;
        bool isNegative = number < 0;
        number = Math.Abs(number); // Work with positive numbers for reversing

        while (number > 0)
        {
            int digit = number % 10; // Extract the last digit
            reversed = reversed * 10 + digit; // Build the reversed number
            number /= 10; // Remove the last digit
        }

        if (isNegative)
        {
            reversed = -reversed; // Reapply the negative sign if the original number was negative
        }

        Console.WriteLine($"Reversed Number: {reversed}");
    }
}















9- Write a program in C# Sharp to find prime numbers within a range of numbers.

Test Data :
Input starting number of range: 1
Input ending number of range : 50





using System;

class Program
{
    static void Main()
    {
        Console.Write("Input starting number of range: ");
        int start;
        while (!int.TryParse(Console.ReadLine(), out start) || start < 1)
        {
            Console.Write("Please enter a valid starting number (>= 1): ");
        }

        Console.Write("Input ending number of range: ");
        int end;
        while (!int.TryParse(Console.ReadLine(), out end) || end < start)
        {
            Console.Write("Please enter a valid ending number (>= starting number): ");
        }

        Console.WriteLine($"Prime numbers between {start} and {end}:");
        for (int i = start; i <= end; i++)
        {
            if (IsPrime(i))
            {
                Console.Write(i + " ");
            }
        }
        Console.WriteLine();
    }

    static bool IsPrime(int num)
    {
        if (num < 2) return false; // 0 and 1 are not prime numbers
        for (int i = 2; i <= Math.Sqrt(num); i++)
        {
            if (num % i == 0) return false; // Not a prime number if divisible
        }
        return true;
    }
}







10- . Write a program in C# Sharp to convert a decimal number into binary without using an array.
Test Data :
Enter a number to convert : 25
Expected Output :
The Binary of 25 is 11001.



using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a number to convert: ");
        int number;

        while (!int.TryParse(Console.ReadLine(), out number) || number < 0)
        {
            Console.Write("Please enter a valid non-negative integer: ");
        }

        Console.Write($"The Binary of {number} is: ");
        ConvertToBinary(number);
        Console.WriteLine();
    }

    static void ConvertToBinary(int num)
    {
        if (num == 0)
        {
            Console.Write(0);
            return;
        }

        if (num > 0)
        {
            ConvertToBinary(num / 2); // Recursive call for the next higher bit
            Console.Write(num % 2);  // Print the least significant bit
        }
    }
}
